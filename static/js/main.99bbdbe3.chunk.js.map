{"version":3,"sources":["store/actions/movie.actions.js","api/instance.js","services/movie.service.js","components/MoviePreviewItem/index.js","components/GenreRow/index.js","scenes/HomeScene/index.js","components/StarsBar/index.js","scenes/MovieScene/index.js","store/actions/search.actions.js","scenes/SearchScene/index.js","components/SearchInput/index.js","components/Header/index.js","App.js","reportWebVitals.js","store/reducers/movie.reducer.js","store/reducers/search.reducer.js","store/index.js","store/rootReducer.js","index.js"],"names":["movieActions","setMoviesAction","payload","type","baseAPIUrl","instance","axios","create","baseURL","headers","responseType","getMovies","query","a","url","get","MoviePreviewItem","props","movie","to","id","className","src","backdrop","alt","title","GenreRow","state","page","nextTransform","rowWidth","rowChildrenSumWidth","rowElement","React","nextClick","setState","setTransform","prevClick","setElementsSizes","current","childrenLength","children","length","childrenWidth","offsetWidth","this","window","addEventListener","debounce","removeEventListener","genre","movies","onClick","ref","style","transform","map","item","index","HomeScene","moviesByGenre","connect","StarsBar","percent","BarBody","width","MovieScene","currentMovie","getMovie","movieStore","getMovieObj","currentId","match","params","prevProps","prevState","snapshot","movieRating","imdb_rating","toFixed","movieRatingPercent","movieDate","released_on","Date","poster","getFullYear","director","cast","overview","withRouter","searchActions","setSearchQueryAction","setSearchResultsAction","SearchScene","getData","searchQuery","search","response","setSearchResultsToStore","data","console","error","dispatch","searchResults","results","SearchInput","onChange","event","value","target","searchListener","pathname","history","location","trim","push","goBack","Header","App","initIsDone","setMoviesToStore","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","allMovies","movieReducer","action","genresList","forEach","genres","indexOf","matchMovies","searchReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99bbdbe3.chunk.js","sourcesContent":["export const movieActions = {\n    SET_ALL_MOVIES: 'SET_ALL_MOVIES'\n}\n\nexport const setMoviesAction = (payload) => {\n    return {\n        type: movieActions.SET_ALL_MOVIES,\n        payload\n    }\n};\n","import axios from 'axios'\n\nexport const baseAPIUrl = 'https://wookie.codesubmit.io/'\n\nexport const instance = axios.create({\n    baseURL: baseAPIUrl,\n    headers: {'Authorization': 'Bearer Wookie2019'},\n    responseType: 'json'\n});","import {instance, baseAPIUrl} from \"../api/instance\";\n\nexport const getMovies = async (query) => {\n    const url = baseAPIUrl + `movies${query ? '?q=' + query : ''}`\n\n    try {\n        return await instance.get(url)\n    } catch (error) {\n        throw error\n    }\n}","import * as React from 'react'\nimport './index.scss'\nimport {Link} from \"react-router-dom\";\n\nexport const MoviePreviewItem = (props) => {\n    const {movie} = props\n\n    return(\n        <Link to={`movie/${movie.id}`} className={'movie-preview-item'}>\n            <img src={movie.backdrop} alt={movie.title}/>\n        </Link>\n    )\n}","import * as React from 'react'\nimport './index.scss'\nimport {MoviePreviewItem} from \"../MoviePreviewItem\";\nimport { debounce } from 'lodash'\n\nexport default class GenreRow extends React.Component {\n\n    state = {\n        page: 0,\n        nextTransform: '',\n        rowWidth: 0,\n        rowChildrenSumWidth: 0\n    }\n\n    rowElement = React.createRef()\n\n    nextClick = () => {\n        this.setState({\n            page: this.state.page + 1,\n        }, () => this.setTransform())\n    }\n\n    prevClick = () => {\n        this.setState({\n            page: this.state.page - 1,\n        }, () => this.setTransform())\n    }\n\n    setTransform = () => {\n        this.setState({\n            nextTransform: `translateX(-${this.state.rowWidth * this.state.page}px)`\n        })\n    }\n\n    setElementsSizes = () => {\n        if (this.rowElement && this.rowElement.current) {\n            const childrenLength = this.rowElement.current.children.length\n            const childrenWidth = this.rowElement.current.children[0].offsetWidth\n\n            this.setState({\n                rowWidth: this.rowElement.current.offsetWidth,\n                rowChildrenSumWidth: childrenLength * childrenWidth\n            }, () => this.setTransform())\n        }\n    }\n\n    componentDidMount() {\n        this.setElementsSizes()\n        window.addEventListener('resize', debounce(this.setElementsSizes, 500));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setElementsSizes)\n    }\n\n    render() {\n        const {genre, movies} = this.props\n        const {page, nextTransform, rowWidth, rowChildrenSumWidth} = this.state\n\n        return(\n            <div className={'genre-row'}>\n                <h2>{genre}</h2>\n                <div className={'row-wrapper'}>\n                    <div className={'arrows'}>\n                        {page > 0 &&\n                            <div onClick={this.prevClick} className={'arrow prev'}>\n                                <img src='https://www.flaticon.com/svg/static/icons/svg/271/271220.svg' alt='prev'/>\n                            </div>\n                        }\n                        {rowWidth * (page + 1) < rowChildrenSumWidth &&\n                            <div onClick={this.nextClick} className={'arrow next'}>\n                                <img src='https://www.flaticon.com/svg/static/icons/svg/271/271228.svg' alt='next'/>\n                            </div>\n                        }\n                    </div>\n                    <div ref={this.rowElement} className={'row'} style={{transform: nextTransform}}>\n                        {movies.map((item, index) => (\n                                <MoviePreviewItem key={index} movie={item}/>\n                            )\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import * as React from 'react'\nimport './index.scss'\nimport {connect} from \"react-redux\";\nimport GenreRow from \"../../components/GenreRow\";\n\nclass HomeScene extends React.Component {\n\n    render() {\n        const moviesByGenre = this.props.movie.moviesByGenre\n\n        return(\n            <div className={'home-scene'}>\n                <div className={'container rows-container'}>\n                    {moviesByGenre && moviesByGenre.map((item, index) => (\n                        <GenreRow key={index} genre={item.genre} movies={item.movies}/>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movie: state.movie,\n    };\n};\n\nexport default connect(mapStateToProps)(HomeScene);","import * as React from 'react'\nimport './index.scss'\n\nexport const StarsBar = (props) => {\n\n    const {percent} = props\n\n    return(\n        <div className={'stars-bar-component'}>\n            <BarBody type={'gray'}/>\n            <BarBody type={'yellow'} percent={percent}/>\n        </div>\n\n    )\n}\n\nconst BarBody = (props) => {\n    const {type, percent} = props\n\n    return(\n        <div className={`stars-bar ${type}`} style={{width: `${percent}%`}}>\n            <div className={'star'}>\n                <div className={'clipboard'}/>\n            </div>\n            <div className={'star'}>\n                <div className={'clipboard'}/>\n            </div>\n            <div className={'star'}>\n                <div className={'clipboard'}/>\n            </div>\n            <div className={'star'}>\n                <div className={'clipboard'}/>\n            </div>\n            <div className={'star'}>\n                <div className={'clipboard'}/>\n            </div>\n        </div>\n    )\n}","import * as React from 'react'\nimport './index.scss'\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {StarsBar} from \"../../components/StarsBar\";\n\nclass MovieScene extends React.Component {\n\n    state = {\n        currentMovie: {}\n    }\n\n    getMovie = () => {\n        const movieStore = this.props.movie\n        const getMovieObj = movieStore && movieStore.getMovieObj\n        const currentId = this.props.match.params.id\n\n        this.setState({\n            currentMovie: getMovieObj[currentId]\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.match.params.id !== this.props.match.params.id){\n            this.getMovie()\n        }\n    }\n\n    componentDidMount() {\n        this.getMovie()\n    }\n\n    render() {\n        const movie = this.state.currentMovie\n        const movieRating = movie.imdb_rating && movie.imdb_rating.toFixed(1)\n        const movieRatingPercent = movieRating * 10\n        const movieDate = movie.released_on && new Date(movie.released_on);\n\n        return(\n            <div className={'movie-scene'}>\n                <div className={'container movie-container'}>\n                    <div className={'poster-block'}>\n                        <img src={movie.poster} alt={movie.title}/>\n                    </div>\n                    <div className={'info-block'}>\n                        <div className={'head'}>\n                            <h2>{movie.title}&nbsp;<span>({movieRating})</span></h2>\n                            <StarsBar percent={movieRatingPercent}/>\n                        </div>\n                        <div className={'sub-info'}>\n                            <div className={'year'}>\n                                <span>{movieDate && movieDate.getFullYear()}</span>\n                                <span>{movie.length}</span>\n                                <span>{movie.director}</span>\n                            </div>\n                            <div className={'cast'}>\n                                <span>Cast:&nbsp;</span>\n                                {movie.cast && movie.cast.map((item, index) => (\n                                    <span key={index}>{item}</span>\n                                ))}\n                            </div>\n                        </div>\n                        <p className={'overview'}>{movie.overview}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movie: state.movie,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(MovieScene));","\nexport const searchActions = {\n    SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\n    SET_SEARCH_RESULTS: 'SET_SEARCH_RESULTS',\n}\n\nexport const setSearchQueryAction = (payload) => {\n    return {\n        type: searchActions.SET_SEARCH_QUERY,\n        payload\n    }\n};\n\nexport const setSearchResultsAction = (payload) => {\n    return {\n        type: searchActions.SET_SEARCH_RESULTS,\n        payload\n    }\n};\n","import * as React from 'react'\nimport './index.scss'\nimport {connect} from \"react-redux\";\nimport {MoviePreviewItem} from \"../../components/MoviePreviewItem\";\nimport {getMovies} from \"../../services/movie.service\";\nimport {setSearchQueryAction, setSearchResultsAction} from \"../../store/actions/search.actions\";\n\nclass SearchScene extends React.Component {\n\n    getData = async () => {\n        try {\n            const searchQuery = this.props.search.query\n            if(searchQuery) {\n                const response = await getMovies(searchQuery)\n                this.setSearchResultsToStore(response.data.movies)\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    setSearchResultsToStore = (movies) => {\n        this.props.dispatch(setSearchResultsAction(movies))\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.search.query !== this.props.search.query) {\n            this.getData()\n        }\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    componentWillUnmount() {\n        this.props.dispatch(setSearchQueryAction(''))\n        this.props.dispatch(setSearchResultsAction([]))\n    }\n\n\n    render() {\n        const searchResults = this.props.search.results\n\n        return(\n            <div className={'search-scene'}>\n                {searchResults.length ?\n                    <div className={'container search-results-container'}>\n                        {searchResults.map((item, index) => (\n                            <MoviePreviewItem key={index} movie={item}/>\n                        ))}\n                    </div> :\n                    <p className={'no-results'}>No Results</p>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        search: state.search,\n    };\n};\n\nexport default connect(mapStateToProps)(SearchScene);","import * as React from 'react'\nimport './index.scss'\nimport {connect} from \"react-redux\";\nimport {setSearchQueryAction} from \"../../store/actions/search.actions\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass SearchInput extends React.Component {\n\n    onChange = (event) => {\n        const value = event.target.value\n        this.props.dispatch(setSearchQueryAction(value))\n        this.searchListener(value)\n    }\n\n    searchListener = (value) => {\n        const pathname = this.props.history.location.pathname\n\n        if(value.trim().length && pathname !== '/search'){\n            this.props.history.push('/search')\n        }\n\n        if(!value.trim().length && pathname === '/search'){\n            this.props.history.goBack()\n        }\n    }\n\n    render() {\n        const searchQuery = this.props.search.query\n        return(\n            <div className={'search-input'}>\n                <img src='https://img.icons8.com/search' alt='search'/>\n                <input type='text' onChange={this.onChange} value={searchQuery}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        search: state.search,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(SearchInput));","import * as React from 'react'\nimport './index.scss'\nimport SearchInput from \"../SearchInput\";\nimport {Link} from \"react-router-dom\";\n\nexport const Header = (props) => {\n\n    return(\n        <header className={'app-header'}>\n            <div className={'container'}>\n                <Link to={'/'} className={'logo'}>\n                    <span>WOOKIE <br/> MOVIES</span>\n                </Link>\n                <SearchInput/>\n            </div>\n        </header>\n    )\n}","import * as React from 'react';\nimport './App.scss';\nimport {connect} from 'react-redux';\nimport {setMoviesAction} from \"./store/actions/movie.actions\";\nimport {getMovies} from \"./services/movie.service\";\nimport {Route, Switch} from \"react-router-dom\";\nimport HomeScene from \"./scenes/HomeScene\";\nimport MovieScene from \"./scenes/MovieScene\";\nimport SearchScene from \"./scenes/SearchScene\";\nimport {Header} from \"./components/Header\";\n\nclass App extends React.Component {\n\n    state = {\n        initIsDone: false\n    }\n\n    getData = async () => {\n        try {\n            const response = await getMovies()\n            this.setMoviesToStore(response.data.movies)\n            this.setState({\n                initIsDone: true\n            })\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    setMoviesToStore = (movies) => {\n        this.props.dispatch(setMoviesAction(movies))\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                {this.state.initIsDone &&\n                    <Switch>\n                        <Route exact path=\"/\" component={HomeScene}/>\n                        <Route exact path=\"/movie/:id\" component={MovieScene}/>\n                        <Route exact path=\"/search\" component={SearchScene}/>\n                    </Switch>\n                }\n            </div>\n        );\n    }\n}\n\nexport default connect()(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {movieActions} from \"../actions/movie.actions\";\n\nconst initState = {\n    allMovies: [],\n    moviesByGenre: [],\n    getMovieObj: {}\n};\n\nexport const movieReducer = (state = initState, action) => {\n    switch (action.type) {\n        case movieActions.SET_ALL_MOVIES: {\n\n            let genresList = [];\n            let getMovieObj = {};\n\n            action.payload.forEach((movie) => {\n\n                //create obj to get current movie\n                getMovieObj[movie.id] = movie\n\n                //create genresList\n                movie.genres.forEach((genre) => {\n                    if(genresList.indexOf(genre) === -1) {\n                        genresList = [\n                            ...genresList,\n                            genre\n                        ]\n                    }\n                })\n            })\n\n            const moviesByGenre = genresList.map((genre) => {\n                let matchMovies = []\n\n                //sort movies by genre\n                action.payload.forEach((movie) => {\n                    if(movie.genres.indexOf(genre) !== -1){\n                        matchMovies = [\n                            ...matchMovies,\n                            movie\n                        ]\n                    }\n                })\n\n                return {\n                    genre: genre,\n                    movies: matchMovies\n                }\n            })\n\n            return {\n                ...state,\n                allMovies: action.payload,\n                moviesByGenre: moviesByGenre,\n                getMovieObj: getMovieObj\n            }\n        }\n        default:\n            return state\n    }\n}","import {searchActions} from \"../actions/search.actions\";\n\nconst initState = {\n    query: '',\n    results: []\n};\n\nexport const searchReducer = (state = initState, action) => {\n    switch (action.type) {\n        case searchActions.SET_SEARCH_QUERY:\n            return {\n                ...state,\n                query: action.payload\n            }\n        case searchActions.SET_SEARCH_RESULTS:\n            return {\n                ...state,\n                results: action.payload\n            }\n        default:\n            return state\n    }\n}","import { configureStore } from '@reduxjs/toolkit'\nimport {rootReducer} from \"./rootReducer\";\n\nconst store = configureStore({\n    reducer: rootReducer\n})\n\nexport default store","import {movieReducer} from \"./reducers/movie.reducer\";\nimport {searchReducer} from \"./reducers/search.reducer\";\n\nexport const rootReducer = (state = {}, action) => {\n    return {\n        movie: movieReducer(state.movie, action),\n        search: searchReducer(state.search, action)\n    };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from \"./store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}